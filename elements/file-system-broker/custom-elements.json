{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "file-system-broker.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`file-system-broker`\n`singleton to simplify interactions with the file system on a user&#39;s device`",
          "name": "FileSystemBroker",
          "members": [
            {
              "kind": "method",
              "name": "isFileSystemAccessSupported",
              "description": "Check if File System Access API is available",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "isMobileDevice",
              "description": "Check if device is likely mobile based on user agent and touch capability",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "This is a convention, not the standard",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "loadFileFallback",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Fallback file selection using HTML input element for mobile devices",
              "return": {
                "type": {
                  "text": "Promise<File>"
                }
              }
            },
            {
              "kind": "method",
              "name": "typeToAcceptString",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                }
              ],
              "description": "Convert type to accept string for HTML input element",
              "return": {
                "type": {
                  "text": "String"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadFile",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "getFileContents",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "typeToAccept",
              "parameters": [
                {
                  "name": "type"
                }
              ]
            },
            {
              "kind": "method",
              "name": "saveFile",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "content"
                }
              ]
            },
            {
              "kind": "method",
              "name": "openDir",
              "parameters": [
                {
                  "name": "recursive",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "description": "Open directory"
            },
            {
              "kind": "method",
              "name": "readFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "writeFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "content",
                  "default": "\"\""
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__readDir",
              "parameters": [
                {
                  "name": "dirHandle"
                },
                {
                  "name": "recursive"
                },
                {
                  "name": "folder"
                },
                {
                  "name": "parentHandler"
                }
              ],
              "description": "Read contents of a directory and recursively load down from there"
            },
            {
              "kind": "field",
              "name": "dirHandler",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "fileHandler",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "file-system-broker",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "FileSystemBrokerSingleton"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "FileSystemBroker",
            "module": "file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBroker",
          "declaration": {
            "name": "FileSystemBroker",
            "module": "file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBrokerSingleton",
          "declaration": {
            "name": "FileSystemBrokerSingleton",
            "module": "file-system-broker.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/docx-file-system-broker.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component that bridges local file system via File API and\ncombines the functionality of the DOCX parser so that you can easily\nload a file / directory from the user's file system and then access\nthat data from DOCX",
          "name": "DOCXFileSystemBroker",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "This is a convention, not the standard",
              "readonly": true,
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "__toHTML",
              "parameters": [
                {
                  "name": "buffer"
                },
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "HTMLToDOCX",
              "parameters": [
                {
                  "name": "content"
                },
                {
                  "name": "filename"
                },
                {
                  "name": "dl",
                  "default": "true"
                }
              ],
              "description": "Take contents and return a docx file downloaded to the user's browser"
            },
            {
              "kind": "method",
              "name": "fileToHTML",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "name",
                  "default": "\"filepicked\""
                }
              ]
            },
            {
              "kind": "field",
              "name": "libPath",
              "type": {
                "text": "string"
              },
              "default": "\"mammoth/\""
            },
            {
              "kind": "method",
              "name": "isFileSystemAccessSupported",
              "description": "Check if File System Access API is available",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "isMobileDevice",
              "description": "Check if device is likely mobile based on user agent and touch capability",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "loadFileFallback",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Fallback file selection using HTML input element for mobile devices",
              "return": {
                "type": {
                  "text": "Promise<File>"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "typeToAcceptString",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                }
              ],
              "description": "Convert type to accept string for HTML input element",
              "return": {
                "type": {
                  "text": "String"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "loadFile",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "getFileContents",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "typeToAccept",
              "parameters": [
                {
                  "name": "type"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "saveFile",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "content"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "openDir",
              "parameters": [
                {
                  "name": "recursive",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "description": "Open directory",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "readFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "writeFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "content",
                  "default": "\"\""
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "__readDir",
              "parameters": [
                {
                  "name": "dirHandle"
                },
                {
                  "name": "recursive"
                },
                {
                  "name": "folder"
                },
                {
                  "name": "parentHandler"
                }
              ],
              "description": "Read contents of a directory and recursively load down from there",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "dirHandler",
              "type": {
                "text": "null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "fileHandler",
              "type": {
                "text": "null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            }
          ],
          "superclass": {
            "name": "FileSystemBroker",
            "module": "/file-system-broker.js"
          }
        },
        {
          "kind": "variable",
          "name": "DOCXFileSystemBrokerSingleton"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "DOCXFileSystemBroker",
            "module": "lib/docx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "DOCXFileSystemBrokerSingleton",
          "declaration": {
            "name": "DOCXFileSystemBrokerSingleton",
            "module": "lib/docx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "DOCXFileSystemBroker",
          "declaration": {
            "name": "DOCXFileSystemBroker",
            "module": "lib/docx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBroker",
          "declaration": {
            "name": "FileSystemBroker",
            "module": "lib/docx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBrokerSingleton",
          "declaration": {
            "name": "FileSystemBrokerSingleton",
            "module": "lib/docx-file-system-broker.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/xlsx-file-system-broker.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component that bridges local file system via File API and\ncombines the functionality of the XSLX parser so that you can easily\nload a file / directory from the user's file system and then access\nthat data from XLSX / ODS / CSV repos",
          "name": "XLSXFileSystemBroker",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "This is a convention, not the standard",
              "readonly": true,
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "workbookFromJSON",
              "parameters": [
                {
                  "name": "data"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__toJSON",
              "parameters": [
                {
                  "name": "workbook"
                },
                {
                  "name": "stringify"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__toCSV",
              "parameters": [
                {
                  "name": "workbook"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__toFMLA",
              "parameters": [
                {
                  "name": "workbook"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__toHTML",
              "parameters": [
                {
                  "name": "workbook"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__toXLSX",
              "parameters": [
                {
                  "name": "workbook"
                },
                {
                  "name": "filename"
                }
              ]
            },
            {
              "kind": "method",
              "name": "processWorker",
              "parameters": [
                {
                  "name": "wb"
                },
                {
                  "name": "format"
                },
                {
                  "name": "filename"
                }
              ]
            },
            {
              "kind": "method",
              "name": "processFile",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "format"
                },
                {
                  "name": "filename"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeWorker",
              "parameters": [
                {
                  "name": "data"
                },
                {
                  "name": "format"
                },
                {
                  "name": "op",
                  "default": "\"read\""
                },
                {
                  "name": "filename",
                  "default": "\"\""
                }
              ]
            },
            {
              "kind": "field",
              "name": "XLSX",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "libPath",
              "type": {
                "text": "string"
              },
              "default": "\"xlsx/\""
            },
            {
              "kind": "field",
              "name": "XW",
              "type": {
                "text": "object"
              },
              "default": "{ msg: \"xlsx\", worker: this.libPath + \"xlsxworker.js\", }"
            },
            {
              "kind": "method",
              "name": "isFileSystemAccessSupported",
              "description": "Check if File System Access API is available",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "isMobileDevice",
              "description": "Check if device is likely mobile based on user agent and touch capability",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "loadFileFallback",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Fallback file selection using HTML input element for mobile devices",
              "return": {
                "type": {
                  "text": "Promise<File>"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "typeToAcceptString",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                }
              ],
              "description": "Convert type to accept string for HTML input element",
              "return": {
                "type": {
                  "text": "String"
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "loadFile",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "getFileContents",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "String"
                  }
                },
                {
                  "name": "multiple",
                  "default": "false",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "excludeAll",
                  "default": "true",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ],
              "description": "Get contents of a file based on type",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "typeToAccept",
              "parameters": [
                {
                  "name": "type"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "saveFile",
              "parameters": [
                {
                  "name": "type"
                },
                {
                  "name": "content"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "openDir",
              "parameters": [
                {
                  "name": "recursive",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "description": "Open directory",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "readFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "writeFileInDir",
              "parameters": [
                {
                  "name": "fileName"
                },
                {
                  "name": "content",
                  "default": "\"\""
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ],
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "method",
              "name": "__readDir",
              "parameters": [
                {
                  "name": "dirHandle"
                },
                {
                  "name": "recursive"
                },
                {
                  "name": "folder"
                },
                {
                  "name": "parentHandler"
                }
              ],
              "description": "Read contents of a directory and recursively load down from there",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "dirHandler",
              "type": {
                "text": "null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "fileHandler",
              "type": {
                "text": "null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "FileSystemBroker",
                "module": "file-system-broker.js"
              }
            }
          ],
          "superclass": {
            "name": "FileSystemBroker",
            "module": "/file-system-broker.js"
          }
        },
        {
          "kind": "variable",
          "name": "XLSXFileSystemBrokerSingleton"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "XLSXFileSystemBroker",
            "module": "lib/xlsx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "XLSXFileSystemBrokerSingleton",
          "declaration": {
            "name": "XLSXFileSystemBrokerSingleton",
            "module": "lib/xlsx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "XLSXFileSystemBroker",
          "declaration": {
            "name": "XLSXFileSystemBroker",
            "module": "lib/xlsx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBroker",
          "declaration": {
            "name": "FileSystemBroker",
            "module": "lib/xlsx-file-system-broker.js"
          }
        },
        {
          "kind": "js",
          "name": "FileSystemBrokerSingleton",
          "declaration": {
            "name": "FileSystemBrokerSingleton",
            "module": "lib/xlsx-file-system-broker.js"
          }
        }
      ]
    }
  ]
}
