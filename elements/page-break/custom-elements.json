{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "page-break.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`page-break`\n`a visual break but also helps manage hierarchy`",
          "name": "PageBreak",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setupTargetData",
              "parameters": [
                {
                  "name": "newTarget"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCurrentUser",
              "description": "Helper method to get current user from available stores"
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "haxProperties integration via file reference",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "haxHooks",
              "description": "haxHooks"
            },
            {
              "kind": "method",
              "name": "haxpreProcessInsertContent",
              "parameters": [
                {
                  "name": "details"
                },
                {
                  "name": "activeNode"
                }
              ],
              "description": "on insert, test for other page-break tags via manager to see\nif we're able to steal sane defaults from there"
            },
            {
              "kind": "method",
              "name": "haxtrayDragNDropToNode",
              "parameters": [
                {
                  "name": "activeNode"
                }
              ],
              "description": "Same as the above hook in capability however because of the interim state\nof a drag event, we need a specialized hook that is for when the new\nelement has been dropped into the page"
            },
            {
              "kind": "method",
              "name": "haxsetupActiveElementForm",
              "parameters": [
                {
                  "name": "props"
                }
              ],
              "description": "Allow for dynamic setting of the parent field if we have the store around\nwith values to do so"
            },
            {
              "kind": "method",
              "name": "haxactiveElementChanged",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "value"
                }
              ],
              "description": "Ensure that if we WERE active and now are not\nand have a reference to the custom element menu in hax\nand are the right break type, that we reset these items"
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "description": "ensure that when we flip states here that we are actively switching the original level var"
            },
            {
              "kind": "method",
              "name": "haxinlineContextMenu",
              "parameters": [
                {
                  "name": "ceMenu"
                }
              ],
              "description": "add buttons when it is in context"
            },
            {
              "kind": "method",
              "name": "_updateHAXCEMenu"
            },
            {
              "kind": "method",
              "name": "haxClickLockInPage",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "haxClickInlineLock",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "haxClickInlinePublished",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "relatedItems",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "related-items"
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "accentColor",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "accent-color"
            },
            {
              "kind": "field",
              "name": "entityType",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"page\"",
              "attribute": "entity-type"
            },
            {
              "kind": "field",
              "name": "status",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "author",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "author"
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ newPage: \"New page\", pageBreak: \"Page break\", selectToEditPageDetails: \"Select to edit Page details\", clickToUnlock: \"Click to unlock\", noParent: \"No parent\", toggleLock: \"Toggle lock\", togglePublished: \"Toggle published\", }"
            },
            {
              "kind": "field",
              "name": "description",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "hideInMenu",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hide-in-menu",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "noderefs",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "developerTheme",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "developer-theme"
            },
            {
              "kind": "field",
              "name": "tags",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "tags",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "title",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "attribute": "title",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageType",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "page-type"
            },
            {
              "kind": "field",
              "name": "slug",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "slug"
            },
            {
              "kind": "field",
              "name": "published",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "published",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "image",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "image"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "locked",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "locked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "order",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "order"
            },
            {
              "kind": "field",
              "name": "depth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "depth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "itemId",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "item-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_haxState",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "_haxState"
            },
            {
              "kind": "field",
              "name": "IORemoveOnVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "IODelay",
              "type": {
                "text": "number"
              },
              "default": "250"
            },
            {
              "kind": "field",
              "name": "remoteHeadingobserver",
              "default": "new MutationObserver(() => { // lock ensures that title update, then updating hte innerText // doesn't generate another mutation record if (this.title != this.target.innerText) { this.__moUpdate = true; this.title = this.target.innerText; } })"
            },
            {
              "kind": "field",
              "name": "iconType",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"editor:format-page-break\"",
              "attribute": "iconType"
            },
            {
              "kind": "field",
              "name": "breakType",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"node\"",
              "attribute": "break-type"
            },
            {
              "kind": "field",
              "name": "parent",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "attribute": "parent",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "iconType",
              "type": {
                "text": "string"
              },
              "default": "\"editor:format-page-break\"",
              "fieldName": "iconType"
            },
            {
              "name": "related-items",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "relatedItems"
            },
            {
              "name": "icon",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "icon"
            },
            {
              "name": "accent-color",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "accentColor"
            },
            {
              "name": "entity-type",
              "type": {
                "text": "string"
              },
              "default": "\"page\"",
              "fieldName": "entityType"
            },
            {
              "name": "description",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "description"
            },
            {
              "name": "order",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "order"
            },
            {
              "name": "hide-in-menu",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideInMenu"
            },
            {
              "name": "tags",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "tags"
            },
            {
              "name": "developer-theme",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "developerTheme"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "fieldName": "title"
            },
            {
              "name": "slug",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "slug"
            },
            {
              "name": "image",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "image"
            },
            {
              "name": "parent",
              "type": {
                "text": "string"
              },
              "fieldName": "parent"
            },
            {
              "name": "published",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "published"
            },
            {
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "locked"
            },
            {
              "name": "depth",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "depth"
            },
            {
              "name": "item-id",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "itemId"
            },
            {
              "name": "break-type",
              "type": {
                "text": "string"
              },
              "default": "\"node\"",
              "fieldName": "breakType"
            },
            {
              "name": "status",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "status"
            },
            {
              "name": "page-type",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "pageType"
            },
            {
              "name": "author",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "author"
            },
            {
              "name": "_haxState",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "_haxState"
            }
          ],
          "mixins": [
            {
              "name": "IntersectionObserverMixin",
              "package": "@haxtheweb/intersection-element/lib/IntersectionObserverMixin.js"
            },
            {
              "name": "I18NMixin",
              "package": "@haxtheweb/i18n-manager/lib/I18NMixin.js"
            },
            {
              "name": "SchemaBehaviors",
              "package": "@haxtheweb/schema-behaviors/schema-behaviors.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "page-break",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageBreak",
          "declaration": {
            "name": "PageBreak",
            "module": "page-break.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "PageBreak",
            "module": "page-break.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/page-anchor.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PageAnchor",
          "members": [
            {
              "kind": "method",
              "name": "clickHandler",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMatchFromFields",
              "parameters": [
                {
                  "name": "id"
                },
                {
                  "name": "target"
                },
                {
                  "name": "field",
                  "default": "\"accentColor\""
                }
              ]
            },
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "haxProperties integration via file reference",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "haxHooks"
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "description": "ensure that when we flip states here that we are actively switching the original level var"
            },
            {
              "kind": "method",
              "name": "haxsetupActiveElementForm",
              "parameters": [
                {
                  "name": "props"
                }
              ],
              "description": "Allow for dynamic setting of the parent field if we have the store around\nwith values to do so"
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "description": "value used for the deep reference within the anchor",
              "default": "null",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "target",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "the selector to target in the DOM; css selector",
              "default": "\"\"",
              "attribute": "target",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "entityId",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "description": "entity to reference to pull associated visuals for such as icon / color",
              "default": "null",
              "attribute": "entity-id"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "null"
              },
              "description": "value used for the deep reference within the anchor",
              "default": "null",
              "fieldName": "value"
            },
            {
              "name": "target",
              "type": {
                "text": "string"
              },
              "description": "the selector to target in the DOM; css selector",
              "default": "\"\"",
              "fieldName": "target"
            },
            {
              "name": "entity-id",
              "type": {
                "text": "null"
              },
              "description": "entity to reference to pull associated visuals for such as icon / color",
              "default": "null",
              "fieldName": "entityId"
            }
          ],
          "mixins": [
            {
              "name": "DDDSuper",
              "package": "@haxtheweb/d-d-d/d-d-d.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageAnchor",
          "declaration": {
            "name": "PageAnchor",
            "module": "lib/page-anchor.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "PageAnchor",
            "module": "lib/page-anchor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/page-break-manager.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PageBreakManagerEl",
          "members": [
            {
              "kind": "method",
              "name": "getParent",
              "parameters": [
                {
                  "name": "el"
                },
                {
                  "name": "rel",
                  "default": "null"
                }
              ]
            },
            {
              "kind": "method",
              "name": "elementsBetween",
              "parameters": [
                {
                  "name": "elem"
                },
                {
                  "name": "selector",
                  "default": "\"page-break\""
                },
                {
                  "name": "filter"
                },
                {
                  "name": "direction",
                  "default": "\"nextElementSibling\""
                }
              ],
              "description": "get all elements between a target and a selector; inspired by\n(c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com"
            },
            {
              "kind": "method",
              "name": "associatedPageBreak",
              "parameters": [
                {
                  "name": "elem"
                }
              ],
              "description": "Return the previous page-break relative to a target element.\nThis is useful for finding the page-break associated with an element in the page"
            },
            {
              "kind": "method",
              "name": "betweenElementsQuery",
              "parameters": [
                {
                  "name": "type",
                  "default": "\"all\""
                }
              ]
            },
            {
              "kind": "method",
              "name": "registerPageBreak",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "windowControllers",
              "default": "new AbortController()"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "breaks",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_timer",
              "type": {
                "text": "number"
              },
              "default": "0"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "page-break-manager",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "pageBreakManager"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageBreakManagerEl",
          "declaration": {
            "name": "PageBreakManagerEl",
            "module": "lib/page-break-manager.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "page-break-manager",
          "declaration": {
            "name": "PageBreakManagerEl",
            "module": "lib/page-break-manager.js"
          }
        },
        {
          "kind": "js",
          "name": "pageBreakManager",
          "declaration": {
            "name": "pageBreakManager",
            "module": "lib/page-break-manager.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/page-break-outline.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PageBreakOutline",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "clickHandler",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rerender"
            },
            {
              "kind": "field",
              "name": "windowControllers",
              "default": "new AbortController()"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "selector",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "div"
            },
            {
              "kind": "field",
              "name": "basePath",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            }
          ],
          "attributes": [
            {
              "name": "selector"
            },
            {
              "name": "base-path"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageBreakOutline",
          "declaration": {
            "name": "PageBreakOutline",
            "module": "lib/page-break-outline.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "PageBreakOutline",
            "module": "lib/page-break-outline.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/page-template.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`page-template`\n`Template component for style guide functionality`",
          "name": "PageTemplate",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "Implements haxProperties to define HAX editor integration",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "enforceStyles",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Whether this is the default template",
              "default": "false",
              "attribute": "enforce-styles",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Name of the template for identification",
              "default": "\"\"",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "schema",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Schema type defining how this template should be used\nOptions: 'block', 'area', 'page'",
              "default": "\"area\"",
              "attribute": "schema",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ pageTemplate: \"Page Template\", templateId: \"Template ID\", defaultTemplate: \"Default Template\", namedTemplate: \"Named Template\", }"
            }
          ],
          "attributes": [
            {
              "name": "enforce-styles",
              "type": {
                "text": "boolean"
              },
              "description": "Whether this is the default template",
              "default": "false",
              "fieldName": "enforceStyles"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "Name of the template for identification",
              "default": "\"\"",
              "fieldName": "name"
            },
            {
              "name": "schema",
              "type": {
                "text": "string"
              },
              "description": "Schema type defining how this template should be used\nOptions: 'block', 'area', 'page'",
              "default": "\"area\"",
              "fieldName": "schema"
            }
          ],
          "mixins": [
            {
              "name": "I18NMixin",
              "package": "@haxtheweb/i18n-manager/lib/I18NMixin.js"
            },
            {
              "name": "SchemaBehaviors",
              "package": "@haxtheweb/schema-behaviors/schema-behaviors.js"
            }
          ],
          "superclass": {
            "name": "DDD",
            "package": "@haxtheweb/d-d-d/d-d-d.js"
          },
          "tagName": "page-template",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageTemplate",
          "declaration": {
            "name": "PageTemplate",
            "module": "lib/page-template.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "PageTemplate",
            "module": "lib/page-template.js"
          }
        }
      ]
    }
  ]
}
